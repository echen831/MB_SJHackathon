[{"/Users/ericchen/Desktop/MB_projects/sj_project/src/index.js":"1","/Users/ericchen/Desktop/MB_projects/sj_project/src/App.js":"2","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/input.jsx":"3","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/states.js":"4","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/buttons.jsx":"5","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/today.jsx":"6","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/history.jsx":"7","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/map.jsx":"8","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/loader.jsx":"9","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/header.jsx":"10","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/about.jsx":"11"},{"size":199,"mtime":1607224861875,"results":"12","hashOfConfig":"13"},{"size":2113,"mtime":1607580028597,"results":"14","hashOfConfig":"13"},{"size":766,"mtime":1607227340486,"results":"15","hashOfConfig":"13"},{"size":5056,"mtime":1607572542567,"results":"16","hashOfConfig":"13"},{"size":793,"mtime":1607494470171,"results":"17","hashOfConfig":"13"},{"size":2285,"mtime":1607583254922,"results":"18","hashOfConfig":"13"},{"size":1965,"mtime":1607584342242,"results":"19","hashOfConfig":"13"},{"size":2384,"mtime":1612677741342,"results":"20","hashOfConfig":"13"},{"size":205,"mtime":1607577188745,"results":"21","hashOfConfig":"13"},{"size":509,"mtime":1612756069144,"results":"22","hashOfConfig":"13"},{"size":4440,"mtime":1607590378777,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"150614y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"/Users/ericchen/Desktop/MB_projects/sj_project/src/index.js",[],["54","55"],"/Users/ericchen/Desktop/MB_projects/sj_project/src/App.js",["56","57"],"import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport { Today } from './components/today';\nimport { History } from './components/history';\nimport { Buttons } from './components/buttons';\nimport { Map } from './components/map';\nimport { Header } from './components/header';\nimport { About } from './components/about';\nimport data from './assets/us_map.json';\n\nconst Months = {\n  '01': 'Jan',\n  '02': 'Feb',\n  '03': 'Mar',\n  '04': 'Apr',\n  '05': 'May',\n  '06': 'Jun',\n  '07': 'Jul',\n  '08': 'Aug',\n  '09': 'Sep',\n  '10': 'Oct',\n  '11': 'Nov',\n  '12': 'Dec'\n}\n\nconst App = () => {\n\n  const [currState, setCurrState] = useState('CA');\n  const [isHistLoaded, setHistIsLoaded] = useState(false);\n  const [histError, setHistError] = useState(null);\n  const [histData, setHistdata] = useState([]);\n\n\n  useEffect(() => { fetchHistData(currState) }, [])\n\n  const fetchHistData = (state) => {\n    setHistIsLoaded(false);\n    fetch(`https://api.covidtracking.com/v1/states/${state}/daily.json`)\n      .then(res => res.json())\n      .then((result) => {\n        let newResult = result.map(res => {\n            let newRes = Object.assign({}, res);\n            newRes.date = setDate(newRes.date);\n            return newRes;\n        })\n        setHistIsLoaded(true);\n        setHistdata(newResult);\n      },\n        (error) => {\n          setHistIsLoaded(true);\n          setHistError(error)\n        }\n      )\n  }\n\n  const setDate = (date) => {\n    date = date.toString();\n    let y = date.slice(0, 4);\n    let m = date.slice(4, 6);\n    let d = date.slice(6);\n\n    return `${Months[m]} ${d}, ${y}`\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className='all-wrapper'>\n        <div className='info-wrapper'>\n          <Today currState={currState}/>\n          <History data={histData} isLoaded={isHistLoaded} error={histError}/>\n        </div>\n        <Map data={data} fetchHistData={fetchHistData} setCurrState={setCurrState}/>\n      </div>\n      <About/>\n      {/* <Buttons setCurrState={setCurrState} fetchHistData={fetchHistData}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/input.jsx",["58","59"],"import React, { useState, useRef } from 'react';\n\nexport const Input = ({ add }) => {\n    const [name, setName] = useState('');\n\n    const nameInput = useRef();\n    const addressInput = useRef();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        add({ name: nameInput.current.value, address: addressInput.current.value })\n        nameInput.current.value = '';\n        addressInput.current.value = '';\n    }\n\n    return (\n        <div>\n            <form action=\"\" onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder='Your name here...' ref={nameInput}/>\n                <input type=\"text\" placeholder='Your address here...'ref={addressInput}/>\n                <button>Submit</button>\n            </form>\n        </div>\n    )\n}",["60","61"],"/Users/ericchen/Desktop/MB_projects/sj_project/src/components/states.js",[],"/Users/ericchen/Desktop/MB_projects/sj_project/src/components/buttons.jsx",[],"/Users/ericchen/Desktop/MB_projects/sj_project/src/components/today.jsx",["62"],"import React, { useEffect, useState } from 'react';\nimport { STATES_HASH } from './states.js';\n\nexport const Today = ({currState}) => {\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        fetch(`https://api.covidtracking.com/v1/states/current.json`)\n            .then(res => res.json())\n            .then((result) => {\n                setIsLoaded(true);\n                setItems(result);\n            },\n            (error) => {\n                setIsLoaded(true);\n                setError(error)\n            }\n        )\n    }, [])\n\n    if (error) {\n        return (\n            <div>Error: {error.message}</div>\n        )\n    } else if (!isLoaded) {\n        return <div>Loading...</div>\n    } else {\n        return (\n            <div>\n                <h2>Today's Data: {`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`}</h2>\n                <h3>State: {STATES_HASH[currState]}</h3>\n                {items.map(state => {\n                    const display = currState !== state.state ? 'hide' : 'state-wrapper'\n                    return (\n                        <div className={display} key={state.state}>\n                            <li>Total Tests</li>\n                            <li>{state.totalTestResults}</li>\n                            <li>Positive</li>\n                            <li>{state.positive}</li>\n                            <li>Negative</li>\n                            <li>{state.negative}</li>\n                            <li>Deaths</li>\n                            <li>{state.death}</li>\n                        </div>\n\n                    )\n                })}\n            </div>\n        )\n    }\n    // return (\n    //     <div className='map-container'>\n    //         {/* Map goes here...\n    //         <ul>\n    //             {names.map((name, idx) => {\n    //                 return(\n    //                     <div key={idx}>\n    //                         <li>{name.name}</li>\n    //                         <li>{name.address}</li>\n    //                     </div>\n    //                 )\n    //             })}\n    //         </ul> */}\n    //     </div>\n    // )\n}","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/history.jsx",["63","64","65","66"],"import React from 'react';\nimport {\n    AreaChart, Area, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport { Loader } from './loader'\n\n\nexport const History = ({ data, isLoaded, error }) => {\n\n    if (error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div className='history-wrapper'>\n            <h3>Historic Data</h3> \n            <h4>Loading...</h4>\n        </div>\n    } else {\n        return (\n            <div className='history-wrapper'>\n                <h3>Historic Data</h3>    \n                <AreaChart\n                    width={450}\n                    height={225}\n                    data={data}\n                    margin={{\n                        top: 20, right: 30, left: 30, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"4 4\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip content={<CustomTooltip date={data.date}/>}/>\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"positive\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n                    <Area type=\"monotone\" dataKey=\"negative\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n                    <Area type=\"monotone\" dataKey=\"death\" stackId=\"2\" stroke=\"#FA5745\" fill=\"#FA7D72\" />\n                </AreaChart>\n            </div>\n        )\n\n    }\n} \n\nconst CustomTooltip = (props) => {\n    if (props.active) {\n        return (\n            <div className=\"custom-tooltip\">\n                <li className=\"date\">{props.payload[0].payload.date}</li>\n                <li className=\"negative\">Neg: {props.payload[0].payload.negative}</li>\n                <li className=\"positive\">Pos: {props.payload[0].payload.positive}</li>\n                <li>Deaths: {props.payload[0].payload.death}</li>\n            </div>\n        );\n    }\n\n    return null;\n};\n","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/map.jsx",["67","68"],"import React, { useRef, useEffect, useState } from 'react';\nimport { select, geoPath, geoAlbersUsa } from \"d3\";\nimport { STATES_ABBREV } from \"./states\";\n\nconst COLORS = [\"lightblue\", \"lightgreen\", \"gold\", \"orange\", \"pink\", \"purple\", \"maroon\", 'lightgrey', \"indigo\", 'coral'];\n\n\n\nexport const Map = ({ data, fetchHistData, setCurrState }) => {\n    const svgRef = useRef();\n    const wrapperRef = useRef();\n\n    useEffect(() => {\n        const svg = select(svgRef.current);\n        \n        const width = 750;\n        const height = 375;\n\n        const projection = geoAlbersUsa().fitSize([width, height], data);\n        const pathGenerator = geoPath().projection(projection);\n\n        // const div = select(\"body\").append(\"div\")\n        //     .attr(\"class\", \"tooltip\")\n        //     .style(\"opacity\", 0);\n\n        svg\n            .selectAll(\".state\")\n            .data(data.features)\n            .join(\"path\")\n            .on(\"click\", (feature, d) => {\n                fetchHistData(STATES_ABBREV[d.properties.NAME])\n                setCurrState(STATES_ABBREV[d.properties.NAME])\n            })\n            // .on(\"mouseover\", (feature, d) => {\n            //     // div.transition()\n            //     //     .duration(200)\n            //     //     .style('opacity', .9);\n            //     // div.html(d.properties.NAME)\n            // })\n            .attr(\"fill\", (d) => {\n                var fips = d.properties.STATE\n                return COLORS[Number(fips) % COLORS.length];\n            })\n            .attr(\"class\", \"state\")\n            .attr(\"d\", feature => pathGenerator(feature))\n    }, [data])\n\n\n    return (\n        <div ref={wrapperRef} className='map-wrapper'>\n            <h3>Click on the State to see its data</h3>\n            <svg ref={svgRef} style={{ width: 750, height: 375 }} className='map'></svg>\n        </div>\n    )\n}\n\n\n// enter code to define tooltip\n\n// var tooltip = d3.select('body').append(\"div\")\n//     .attr(\"id\", \"tooltip-div\")\n//     .attr(\"class\", \"tooltip\")\n//     .style(\"opacity\", 0);\n\n/* D3 tooltip for map */\n// div.tooltip {\n//     position: absolute;\n//     text - align: center;\n//     color: white;\n//     width: 220px;\n//     height: 120px;\n//     padding: 2px;\n//     font: 12px sans - serif;\n//     background - color: gray;\n//     border: 2px;\n//     border: solid;\n//     border - radius: 8px;\n//     pointer - events: none;\n// }\n","/Users/ericchen/Desktop/MB_projects/sj_project/src/components/loader.jsx",[],"/Users/ericchen/Desktop/MB_projects/sj_project/src/components/header.jsx",["69","70","71"],"/Users/ericchen/Desktop/MB_projects/sj_project/src/components/about.jsx",["72","73","74","75","76","77","78","79","80"],"import React from 'react';\n\nexport const About = () => {\n    return (\n        <div className=\"about-all\">\n\n            <div className=\"about-1\">\n                <div className=\"objective\">\n                    <h1 className=\"\">Objective</h1>\n                    <p>Covid Daily Data is a data visual project completed for Mintbean's Social Justice Hackathon from Dec 4, 2020 to Dec 10, 2020. This project was built to provide updated Covid-19 data daily and as an extension to our Stop the Spread App.</p>\n                    <li>Visit: <a href=\"https://rasheeq-ahmed.github.io/StoptheSpread/\" target='_blank'> Stop the Spread </a></li>\n                </div>\n                <img src=\"https://directorsblog.nih.gov/wp-content/uploads/2020/03/COVID-19-Card-3.jpg\" alt=\"\" />\n            </div>\n            <div className=\"about-2\">\n                <div className=\"duration\">\n                    <h2>Duration</h2>\n                    <img src=\"https://i.imgur.com/Nc2p740.png\" alt=\"\" />\n                    <p>1 Week</p>\n\n                </div>\n                {/* <div className=\"prize\">\n                    <h2>Mintbean Hackathon</h2>\n                    <img src=\"https://i.imgur.com/Rhi2W9b.png\" alt=\"\" />\n                    <p>Honorable Mention</p>\n                </div> */}\n                <div className=\"tech\">\n                    <h2>Technology</h2>\n                    <div className='tech-images'>\n                        <div>\n                            <img src=\"https://i.imgur.com/xQhefcL.png\" alt=\"\" />\n                            <p>Javascript</p>\n                        </div>\n                        <div>\n                            <img src=\"https://cdn.auth0.com/blog/react-js/react.png\" alt=\"\" />\n                            <p>React</p> \n                        </div>\n                        <div>\n                            <img src=\"https://avatars3.githubusercontent.com/u/1562726?s=400&v=4\" alt=\"\" />\n                            <p>D3</p>\n                        </div>\n                        <div>\n                            <img src=\"https://coursehunters.online/uploads/default/original/2X/f/f1477b754f60a99bb5346934fb69c9f728ccf338.png\" alt=\"\" />\n                            <p>Recharts</p>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"about-body\">\n                <div className=\"about-people-all\">\n                    <h1 id='team'>Created by</h1>\n                    <div className=\"about-team-members\">\n\n                        <div className=\"person\">\n                            <div className=\"person-pic\">\n                                <img src=\"https://i.imgur.com/9TC4MxW.jpg\" alt=\"\" />\n                            </div>\n                            <h4 className=\"person-name\">Rasheeq Ahmed</h4>\n                            <div className=\"person-links\">\n                                <a href=\"https://www.linkedin.com/in/rasheeq-ahmed-53b7aa91/\" target=\"_blank\">\n                                    <img id=\"linked-icon\" src=\"https://i.imgur.com/Xm1qtqN.png\" />\n                                </a>\n                                <a href=\"https://github.com/Rasheeq-Ahmed\" target=\"_blank\">\n                                    <img id=\"git-icon\" src=\"https://i.imgur.com/vwPks93.png\" />\n                                </a>\n                            </div>\n\n                        </div>\n                        <div className=\"person\">\n                            <div className=\"person-pic\">\n                                <img src=\"https://i.imgur.com/vK31w0L.jpg\" alt=\"\" />\n                            </div>\n                            <h4 className=\"person-name\">Eric Chen</h4>\n\n                            <div className=\"person-links\">\n                                <a href=\"https://i.imgur.com/vK31w0L.jpg\" target=\"_blank\">\n                                    <img id=\"linked-icon\" src=\"https://i.imgur.com/Xm1qtqN.png\" />\n                                </a>\n                                <a href=\"https://github.com/echen831\" target=\"_blank\">\n                                    <img id=\"git-icon\" src=\"https://i.imgur.com/vwPks93.png\" />\n                                </a>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"about-footer\"></div>\n        </div>\n    );\n}",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"90","line":35,"column":49,"nodeType":"91","endLine":35,"endColumn":51,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":4,"column":12,"nodeType":"87","messageId":"88","endLine":4,"endColumn":16},{"ruleId":"85","severity":1,"message":"94","line":4,"column":18,"nodeType":"87","messageId":"88","endLine":4,"endColumn":25},{"ruleId":"81","replacedBy":"95"},{"ruleId":"83","replacedBy":"96"},{"ruleId":"85","severity":1,"message":"97","line":9,"column":18,"nodeType":"87","messageId":"88","endLine":9,"endColumn":25},{"ruleId":"85","severity":1,"message":"98","line":3,"column":22,"nodeType":"87","messageId":"88","endLine":3,"endColumn":30},{"ruleId":"85","severity":1,"message":"99","line":3,"column":32,"nodeType":"87","messageId":"88","endLine":3,"endColumn":35},{"ruleId":"85","severity":1,"message":"100","line":3,"column":37,"nodeType":"87","messageId":"88","endLine":3,"endColumn":41},{"ruleId":"85","severity":1,"message":"101","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":16},{"ruleId":"85","severity":1,"message":"102","line":1,"column":36,"nodeType":"87","messageId":"88","endLine":1,"endColumn":44},{"ruleId":"89","severity":1,"message":"103","line":46,"column":8,"nodeType":"91","endLine":46,"endColumn":14,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":12,"column":21,"nodeType":"107","endLine":12,"endColumn":33},{"ruleId":"105","severity":1,"message":"106","line":13,"column":21,"nodeType":"107","endLine":13,"endColumn":33},{"ruleId":"105","severity":1,"message":"106","line":14,"column":21,"nodeType":"107","endLine":14,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":11,"column":89,"nodeType":"110","endLine":11,"endColumn":104},{"ruleId":"108","severity":1,"message":"109","line":61,"column":95,"nodeType":"110","endLine":61,"endColumn":110},{"ruleId":"111","severity":1,"message":"112","line":62,"column":37,"nodeType":"107","endLine":62,"endColumn":99},{"ruleId":"108","severity":1,"message":"109","line":64,"column":76,"nodeType":"110","endLine":64,"endColumn":91},{"ruleId":"111","severity":1,"message":"112","line":65,"column":37,"nodeType":"107","endLine":65,"endColumn":96},{"ruleId":"108","severity":1,"message":"109","line":77,"column":75,"nodeType":"110","endLine":77,"endColumn":90},{"ruleId":"111","severity":1,"message":"112","line":78,"column":37,"nodeType":"107","endLine":78,"endColumn":99},{"ruleId":"108","severity":1,"message":"109","line":80,"column":71,"nodeType":"110","endLine":80,"endColumn":86},{"ruleId":"111","severity":1,"message":"112","line":81,"column":37,"nodeType":"107","endLine":81,"endColumn":96},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Buttons' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currState' and 'fetchHistData'. Either include them or remove the dependency array.","ArrayExpression",["115"],"'name' is assigned a value but never used.","'setName' is assigned a value but never used.",["113"],["114"],"'setDate' is assigned a value but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'Cell' is defined but never used.","'Loader' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchHistData' and 'setCurrState'. Either include them or remove the dependency array. If 'fetchHistData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [currState, fetchHistData]",{"range":"121","text":"122"},"Update the dependencies array to be: [data, fetchHistData, setCurrState]",{"range":"123","text":"124"},[866,868],"[currState, fetchHistData]",[1602,1608],"[data, fetchHistData, setCurrState]"]